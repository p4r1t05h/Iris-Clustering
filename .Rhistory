#Repeat
rep(0, times=10)
rep(0,10)
rep(1:5, times=2)
rep(1:5, each=2)
rep(1:5, times=2, each=2)
l1<-x>3
li
l1
x+l1
v2<-1:4
v2
paste("Quarter", c(1,2,3,4), sep="-")
paste("Quarter", v2, sep="-")
paste("quarter", 1:5, sep="-")
#Character Vector
c1<-("Quarter")
c1
Quarters<-paste("Quarter", 1:4, sep="-")
Quarters
mode(Quarters)
cat("Quarter", 1:4, sep = "-")
paste(5, c(1,2,3,4), sep="-")
length(Quarters)
substr(Quarters, start = 9, stop = 9)
strsplit(Quarters, split = "-")
strsplit(Quarters, split = "r")
nchar(Quarters)
toupper(Quarters)
tolower(Quarters)
paste(Quarters, Quarters, sep = ", ")
cat(Quarters, Quarters, sep = ", ")
m2<-c("do", "do not", "not")
m2
grep("do", m2)
m2<-c("do", "do not", "not", "does")
m2
grep("do", m2)
m2<-c(m2, "1")
m2
grep("[a-z]", m2)
m2<-c("do", "do not", "not")
m2
grep("do", m2)
m2<-c(m2, "1")
m2
grep("[a-z]", m2)
m2<-c(m2, "1", "does")
m2
grep("[a-z]", m2)
m2<-c("do", "do not", "not")
m2
m2<-c(m2, "1")
m2
grep("[a-z]", m2)
gsub("do", "did", m2)
m2<-c(m2, "not do")
m2
regexpr("do", m2)
f<-c(5,6,7)
s<-c(4,7,6)
ifelse(f>s,f,s)
v
v1<-v[!is.na(v)]
v1
#Matrix
M1<-matrix(data=1, nrow=3, ncol = 3)
M1
dim(M1)
M2<-matrix(NA, nrow = 2, ncol = 2)
M2
dim(M2)
M3<-matrix(c(4,5,6,7), nrow = 2, ncol=2)
M3
M3<-matrix(c(4,5,6,7), nrow = 2, ncol=3)
M3
M3<-matrix(c(4,5,6,7), nrow = 2, ncol=2)
M3
V1<-1:12
V1
M4<-matrix(V1, nrow = 5)
M4
M5<-matrix(V1, nrow = 4, byrow = TRUE)
M5
V2<-1:5
V3<-V2^2
M6<-cbind(V2,V3)
M6
M6<-cbind(M6, V3*2)
M6
M7<-rbind(V2,V3)
M7
colnames(M6)<-C("Vector1", "vector2", "vector3")
colnames(M6)<-c("Vector1", "vector2", "vector3")
M6
rownames(M6)<-c("row1", "row2", "row3", "row4")
rownames(M6)<-c("row1", "row2", "row3", "row4", "row5")
M6
dim(M7)
V2<-c(V2, 6)
V2<-c(V2, 6)
M8<-rbind(V1,V2)
M8
M9<-diag(4)
M9
M10<-diag(V2)
M10
diag(M10)
#Indexing Matrix
M4
M4[4,2]
M4[,2]
M4[3,]
M4[,1:2]
M4[c(2,4),]
M4
M4>4
M4[,2]>6
M4[M4[,1]>4,]
M4[M4[,2]>6,]
M4[M4[,1]>4,]
M4[TRUE,1]
M4[c(FALSE, TRUE, T, F, F),2]
rm(list = ls())
# EDA & Visualization
getwd()
library(ISLR)
library(data.table)
data(Hitters)
str(Hitters)
head(Hitters)
names(Hitters)
?Hitters
Hitters1=data.frame(Hitters)
mean(Hitters1$mean)
#Remove rows with NA
table(is.na(Hitters1$Salary))
Hitters1=na.omit(Hitters1)
table(is.na(Hitters1$Salary))
str(Hitters1)
#ADD more categprical Variable Salary1 with value (L M H)
Salary1<-cut(Hitters1$Salary, breaks = 3, labels = c("L", "M", "H"))
Hitters1<-cbind(Hitters1, Salary1)
head(Hitters1)
table(Salary1)
n<-length(Hitters1$Salary1)
#======================================
#Univariate Analysis
#=====Qualitative (Categorical) Data - Numerical Analysis=============
#Count
table(Hitters1$Salary1)
#Proportion
prop.table(table(Hitters1$Salary1))
#Percentage
prop.table(table(Hitters1$Salary1))*100
bars<-as.matrix(table(Hitters1$Salary1))
bars
colnames(bars)<-"Salary"
rownames(bars)<-c("Low", "Medium", "High")
names(bars)<-c("Low", "Medium", "Hign")
pie(bars, col = c(3,4,5), main = "Salary Grade")
bars
par(mfrow=c(1,1))
barplot(bars)
?par
barplot(bars, beside = T)
barplot(bars, beside = T, space = 0.5, names.arg = c("LowSal","MediumSal","HighSal"))
barplot(bars, beside = T, space = 0.5, col=c(3,4,5),names.arg = c("LowSal","MediumSal","HighSal"))
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"))
par(mfrow=c(1,2))
par(mfrow=c(1,2))
pie(bars, col = c(3,4,5), main = "Salary Grade")
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"))
par(mfrow=c(1,2))
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"), main = "Salary Grade")
par(mfrow=c(1,2))
par(mfrow=c(1,1))
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"), main = "Salary Grade")
par(mfrow=c(1,2))
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"), main = "Salary Grade")
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"), main = "Salary Grade")
par(mfrow=c(1,1))
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"), main = "Salary Grade")
p=prop.test(x=64, n=400, p=0.2, alternative = "less", conf.level = 0.95)
sqrt(p$statistic)
p$p.value
p
View(p)
min(Hitters1$Salary)
max(Hitters1$Salary)
mean(Hitters1$Salary)
median(Hitters1$Salary)
range(Hitters1$Salary)
sd(Hitters1$Salary)
salary.5p<-fivenum(Hitters1$Salary)
salary.5p
Salaru.sum<-summary(Hitters1$Salary)
Salary.sum<-summary(Hitters1$Salary)
salary.sum<-summary(Hitters1$Salary)
salary.sum
names(salary.sum)
IQR<-salary.5p[4]-salary.5p[2]
IQR
rm(Salaru.sum)
rm(Salary.sum)
hist(Hitters1$Salary)
hist(Hitters1$Salary, breaks = 5)
hist(Hitters1$Salary, breaks = 100)
hist(Hitters1$Salary, breaks = c(400,800,1200,1600,2000,2400,2800), main = "Histogram for Salary",
ylab = "Frequency", xlab = "Salary")
hist(Hitters1$Salary, breaks = c(400,800,1200,1600,2000,2400,2800), main = "Histogram for Salary",
ylab = "Frequency", xlab = "Salary")
hist(Hitters1$Salary, breaks = c(0,400,800,1200,1600,2000,2400,2800), main = "Histogram for Salary",
ylab = "Frequency", xlab = "Salary")
?hist
plot(density(Hitters1$Salary))
density(Hitters1$Salary)
plot(salary.sum)
plot(table(salary.sum))
plot(density(Hitters1$Salary))
boxplot(Hitters1$Salary)
boxplot(Hitters1$Salary, ylab="Salary", xlab="Employees")
boxplot(Hitters1$Salary, ylab="Salary", xlab="Employees", col = c(3,4,5))
boxplot(Hitters1$Salary, ylab="Salary", xlab="Employees")
boxplot(Hitters1$Salary, horizontal = T)
salary.stats<-boxplot.stats(Hitters1$Salary)$stats
salary.stats
boxplot(salary.stats)
boxplot(salary.5p)
#=====Shapiro Wilk Normality Test (Normal if p>0.05)
shapiro.test(Hitters1$Salary)
t.test(Hitters1$Salary, alternative = "Greater", mu=425)
t.test(Hitters1$Salary, alternative = "greater", mu=425)
a<-boxplot(Hitters1$Salary~Hitters1$League)
a$stats
tapply(Hitters1$Salary, Hitters1$League, summary)
t.test(Hitters1$Salary~Hitters1$League, alternative="t")
wt.before<-c(65.5,78.3,84.6,67.8,72.9,79.8,56.4,88.3,101.6,88.0,77.4,82.5,93.3)
wt.after<-c(67.1,73.6,82.9,71.0,73.1,73.2,59.9,81.8,91.4,82.5,76.1,81.4,88.8)
par(mfrow=c(1,2))
hist(wt.before,4)
hist(wt.after,4)
t.test(wt.after, wt.before, alternative = "l", paired = T)
# b) Using Formula
wt<-c(wt.after,wt.before)
period<-c(rep("After",13), rep("Before",13))
cbind(period, wt)
boxplot(wt~period)
t.test(wt~period, alternative="l", paired=T)
library(datasets)
data("mtcars")
cars
cars<-mtcars
str(cars)
head(cars)
#convert no of cylinder to factor (Categorical)
cars$cyl<-as.factor(cars$cyl)
str(cars)
table(cars$cyl)
boxplot(cars$mpg~cars$cyl)
par(mfrow=c(1,1))
boxplot(cars$mpg~cars$cyl)
cars.aov<-aov(mpg~cyl, data=cars)
summary(cars.aov)
Salary.Table<-table(Hitters1$League,Hitters1$Salary1)
Salary.Table
prop.table(Salary.Table,1)*100
sal.chi<-chisq.test(Salary.Table)
sal.chi
sal.chi$statistic
sal.chi$expected
sal.chi$residuals
hist(cars$mpg)
hist(cars$wt)
##Scatter Plot (Q->Q)
plot(cars$mpg~cars$wt)
##Corelation Coefficient
cor(cars$mpg,cars$wt)
summary(carslm1)
#Linear Regression Line
#T test for Slope
carslm1<-lm(mpg~wt, data = cars) #fitting linear regression model
summary(carslm1)
abline(carslm1)
#Stratified Scatter plot
plot(cars$mpg, cars$wt, col(cars$cyl), pch=19)))
#Stratified Scatter plot
plot(cars$mpg, cars$wt, col(cars$cyl), pch=19)
#Stratified Scatter plot
plot(cars$mpg, cars$wt, col=(cars$cyl), pch=19)
#Matrix plot
pairs(cars[,c(1,2,3,4,5,6)])
a<-xyzy
a<-c("x","y",","z","y")
a<-c("x","y","z","y")
b<-length(a)
a
a<-c("xyzy")
a
b<-length(a)
b
count<-1
if (b==1)
return(count)
count
if(a[0]==a[1])
if(a[0]==a[1])
count*=1
count *= 1
count = count* 1
count=count*2
rm(list=ls())
setwd("D:\\Data Science\\FarmGuide")
iris<-read.csv("iris.data.csv", header = T)
head(iris)
iris<-read.csv("iris.data.csv", header = F)
head(iris)
str(iris)
View(iris)
iris<-cnames(c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width", "Category"))
iris<-colnames(c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width", "Category"))
iris<-as.data.frame(colnames(c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width", "Category")))
iris<-colnames(c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width", "Category"))
rm(list=ls())
#Setting Working Diarectory
setwd("D:\\Data Science\\FarmGuide")
#Loading Data set
iris<-read.csv("iris.data.csv", header = F)
head(iris)
str(iris)
cnames<-colnames(c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width", "Category"))
?colnames
colnames(cnames)<-c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width", "Category")
colnames(iris)<-c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width", "Category")
head(iris)
str(iris)
sepal.length<-summary(iris$`Sepal Length`)
sepal.length<-summary(iris$Sepal Length)
rm(list=ls())
#Setting Working Diarectory
setwd("D:\\Data Science\\FarmGuide")
#Loading Data set
iris<-read.csv("iris.data.csv", header = F)
head(iris)
str(iris)
#Changing Column Names
colnames(iris)<-c("Sepal_Length", "Sepal_Width", "Petal_Length", "Petal_Width", "Category")
head(iris)
str(iris)
#As we can see the variables as in proper data type so there is no need for transformation.
##Univariate Analysis
#Statistical Summary for SEPAL LENGTH
sepal.length<-summary(iris$)
sepal.length<-summary(iris$Sepal_Length)
sepal.length
sepal.length.hist<-hist(iris$Sepal_Length)
sepal.length.hist<-hist(iris$Sepal_Length, main = "Histogram of Sepal Length", xlab = "Sepal Length")
sepal.length.boxplot<-boxplot(iris$Sepal_Length, names = "Boxplot of Sepal Legth", ylab = "Sepal Length")
sepal.length.density<-plot(density(iris$Sepal_Length))
?density
sepal.width.boxplot<-boxplot(iris$Sepal_Width, names = "Boxplot of Sepal Width", ylab = "Sepal Width")
sepal.width.hist<-hist(iris$Sepal_Width, main = "Histogram of Sepal Width", xlab = "Sepal Width")
sepal.width.boxplot<-boxplot(iris$Sepal_Width, names = "Boxplot of Sepal Width", ylab = "Sepal Width")
sepal.width.density<-plot(density(iris$Sepal_Width))
sepal.width.density<-plot(density(iris$Sepal_Width), main = "Sepal Width")
sepal.length.density<-plot(density(iris$Sepal_Length), main = "Sepal Length")
petal.length.hist<-hist(iris$Petal_Length, main = "Histogram of Petal Length", xlab = "Petal Length")
petal.length.boxplot<-boxplot(iris$Petal_Length, names = "Boxplot of Petal Length", ylab = "Petal Length")
petal.length.density<-plot(density(iris$Petal_Length), main = "Petal Length")
petal.width.hist<-hist(iris$Petal_Width, main = "Histogram of Petal Width", xlab = "Petal Width")
petal.width.boxplot<-boxplot(iris$Petal_Width, names = "Boxplot of Petal Width", ylab = "Petal Width")
petal.width.density<-plot(density(iris$Petal_Width), main = "Petal Width")
sepal.width<-summary(iris$Sepal_Width)
sepal.width
sepal.length.hist$counts
petal.length<-summary(iris$Petal_Length)
petal.length
petal.width<-summary(iris$Petal_Width)
petal.width
rm(list=ls())
#Setting Working Diarectory
setwd("D:\\Data Science\\FarmGuide")
#Loading Data set
iris<-read.csv("iris.data.csv", header = F)
head(iris)
str(iris)
#Changing Column Names
colnames(iris)<-c("Sepal_Length", "Sepal_Width", "Petal_Length", "Petal_Width", "Category")
head(iris)
str(iris)
#As we can see the variables as in proper data type so there is no need for transformation.
#================Univariate Analysis===========================
#----------Statistical Summary for SEPAL LENGTH---------------
sepal.length<-summary(iris$Sepal_Length)
sepal.length
#-------------Visualization for SEPAL LENGTH--------------------
##Histogram
sepal.length.hist<-hist(iris$Sepal_Length, main = "Histogram of Sepal Length", xlab = "Sepal Length")
##Box Plot
sepal.length.boxplot<-boxplot(iris$Sepal_Length, names = "Boxplot of Sepal Length", ylab = "Sepal Length")
##Plot Density Graph
sepal.length.density<-plot(density(iris$Sepal_Length), main = "Sepal Length")
#----------Statistical Summary for SEPAL WIDTH---------------
sepal.width<-summary(iris$Sepal_Width)
sepal.width
#------------Visualization for SEPAL WIDTH-----------------------
##Histogram
sepal.width.hist<-hist(iris$Sepal_Width, main = "Histogram of Sepal Width", xlab = "Sepal Width")
##Box Plot
sepal.width.boxplot<-boxplot(iris$Sepal_Width, names = "Boxplot of Sepal Width", ylab = "Sepal Width")
##Plot Density Graph
sepal.width.density<-plot(density(iris$Sepal_Width), main = "Sepal Width")
#----------Statistical Summary for PETAL LENGTH---------------
petal.length<-summary(iris$Petal_Length)
petal.length
#-------------Visualization for PETAL LENGTH--------------------
##Histogram
petal.length.hist<-hist(iris$Petal_Length, main = "Histogram of Petal Length", xlab = "Petal Length")
##Box Plot
petal.length.boxplot<-boxplot(iris$Petal_Length, names = "Boxplot of Petal Length", ylab = "Petal Length")
##Plot Density Graph
petal.length.density<-plot(density(iris$Petal_Length), main = "Petal Length")
#----------Statistical Summary for PETAL WIDTH---------------
petal.width<-summary(iris$Petal_Width)
petal.width
#-------------Visualization for PETAL WIDTH------------------
##Histogram
petal.width.hist<-hist(iris$Petal_Width, main = "Histogram of Petal Width", xlab = "Petal Width")
##Box Plot
petal.width.boxplot<-boxplot(iris$Petal_Width, names = "Boxplot of Petal Width", ylab = "Petal Width")
##Plot Density Graph
petal.width.density<-plot(density(iris$Petal_Width), main = "Petal Width")
sepal.length.5numSummary<-tapply(iris$Category~iris$Sepal_Length)
sepal.length.5numSummary<-tapply(iris$Category~iris$Sepal_Length, summary)
sepal.length.5numSummary<-tapply(iris$Sepal_Length, iris$Category, summary)
sepal.length.5numSummary
sepal.length.category.boxplot<boxplot(iris$Category~iris$Sepal_Length)
sepal.length.category.boxplot<-boxplot(iris$Category~iris$Sepal_Length)
sepal.length.category.boxplot<-boxplot(iris$Category~iris$Sepal_Length)
sepal.length.category.boxplot<-boxplot(iris$Sepal_Length~iris$Category)
#Dependency Test of X (Sepal Length) with Y (Category)
?glm
sepal.length.test<-glm(iris$Category~iris$Sepal_Length, data = iris)
sepal.length.test<-glm(iris$Category~iris$Sepal_Length, data = iris, family = polynomial)
sepal.length.test<-glm(iris$Category~iris$Sepal_Length, data = iris, family = binomial)
summary(sepal.length.test)$coeff
sepal.width.5numSummary<-tapply(iris$Sepal_Width, iris$Category, summary)
sepal.width.5numSummary
sepal.width.category.boxplot<-boxplot(iris$Sepal_Width~iris$Category)
petal.length.5numSummary<-tapply(iris$Petal_Length, iris$Category, summary)
petal.length.5numSummary
petal.length.category.boxplot<-boxplot(iris$Petal_Length~iris$Category)
?boxplot
petal.length.category.boxplot<-boxplot(iris$Petal_Length~iris$Category)
?boxplot
petal.width.5numSummary<-tapply(iris$Petal_Width, iris$Category, summary)
petal.width.5numSummary
petal.width.category.boxplot<-boxplot(iris$Petal_Width~iris$Category)
#Loading Library for DSBSCAN
library(fpc)
#Removing target variable
iris1<-iris[,-5]
head(iris1)
summary(dist(iris1))
hist(dist(iris1))
ds<-dbscan(iris1, eps = 0.42, MinPts = 5, showplot = 1)
table(ds$cluster, iris$Species)
table(ds$cluster, iris1$Species)
plot(ds,iris1)
table(ds$cluster, iris1$Species)
ds$cluster
length(ds$cluster)
View(iris1)
table(ds$cluster, iris$Category)
plot(ds,iris1)
dist(iris1)
#Heirarchichal clustering with complete linkage
hc.complete = hclust(dist(iris1), method = "complete")
plot(hc.complete)
#Heirarchichal clustering with average linkage
hc.average = hclust(dist(iris1), method = "average")
plot(hc.average)
#Heirarchichal clustering with single linkage
hc.single = hclust(dist(iris1), method = "single")
plot(hc.complete, main = "Complete Linkage", xlab = "", sub = "", cex=.9)
plot(hc.average, main = "Average Linkage", xlab = "", sub = "", cex=.9)
plot(hc.single, main = "single Linkage", xlab = "", sub = "", cex=.9)
cutree(hc.complete,k=2)
cutree(hc.average,k=2)
cutree(hc.single,k=2)
cutree(hc.single,h=1.2)
cutree(hc.single,k=3)
cutree(hc.single,h=3)
km.out=kmeans(iris1,centers = 3, nstart = 20)
km.out$cluster
summary(km.out)
plot(iris1, col=(km.out$cluster+2), main = "K-Means Clustering Results with K=3",
xlab = "", ylab = "", pch=20, cex=2)
plot(iris1, col=(km.out$cluster+2), main = "K-Means Clustering Results with K=3",pch=20, cex=2)
points(km.out$centers,col=1:2,pch=3,cex=3,lwd=3)
#Total within-cluster sim of squares
km.out$tot.withinss
km.out$betweenss
km.out$totss
km.out$tot.withinss/km.out$totss
?cor
multi<-cor(iris$Category~iris$Sepal_Length+iris$Sepal_Width+iris$Petal_Length+iris$Petal_Width)
multi<-cor(iris$Sepal_Length+iris$Sepal_Width+iris$Petal_Length+iris$Petal_Width, iris$Category)
multi<-cor(iris$Sepal_Length+iris$Sepal_Width+iris$Petal_Length+iris$Petal_Width)
multi<-cor(c(iris$Sepal_Length,iris$Sepal_Width,iris$Petal_Length,iris$Petal_Width))
multi<-cor(iris$Sepal_Length,iris$Sepal_Width,iris$Petal_Length,iris$Petal_Width)
multi<-cor(iris$Sepal_Length,iris$Sepal_Width,iris$Petal_Length,iris$Petal_Width, use = "everything")
